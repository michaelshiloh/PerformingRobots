/*

  Large animation (although not full screen), classy method

*/

#include <Arduino.h>
#include <stdint.h>
#include "Wire.h" // for QWIIC communication

// Button
#include <SparkFun_Qwiic_Button.h>
QwiicButton button;

// OLED
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);


static const unsigned char PROGMEM positions[][288] =
{{
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
},
{
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
},
{
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
},
{
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
},
{
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00000000,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
}};


class Animator {
    // Class variables
    unsigned long startedThisFrameAt = 0;
    unsigned long delayBetweenFrames;
    int state = 0;
    unsigned long now;
    boolean firstTime = true;

    /*
       Animation states

       0 - Just created; clear screen; next state: 0
       1 - start position0; next state: 2
       2 - next state 3, if time expired
       3 - start position1; next state: 4
       4 - next state 5, if time expired
       5 - start position2; next state: 6
       6 - next state 7, if time expired
       7 - start position3; next state: 8
       8 - next state 9, if time expired
       9 - start position4; next state: 10
       10 - next state 11, if time expired
       11 - start position1; next state: 12
       12 - next state 13, if time expired
       13 - start position3; next state: 14
       14 - next state 15, if time expired
       15 - start position2; next state: 16
       16 - next state 17, if time expired
       17 - clear screen; next state: 0
    */

  public:

    Animator() { // could call initialize if it hasn't already
      state = 0;
    }

    void init( int _delay) {
      delayBetweenFrames = _delay;
      state = 1;
    }

    void update() {
      // for debugging
      Serial.print(F("state = "));
      Serial.print(state);
      Serial.print(F("\t time = "));
      Serial.print(millis());
      Serial.println();
      switch (state) {
        case 0:
          if (firstTime) {
            display.clearDisplay();
            display.display();
            firstTime = false;
          }
          state = 0;
          break;
        case 1: // start position0 and move to state 2
          display.clearDisplay();
          display.drawBitmap(0, 0, position0, 128, 18, SSD1306_WHITE);
          display.display();
          startedThisFrameAt = millis();
          state = 2;
          break;
        case 2:
          now = millis();
          if ((now - startedThisFrameAt) >= delayBetweenFrames) {
            state = 3;
          }
          break;
        case 3: // start position1 and move to state 4
          display.clearDisplay();
          display.drawBitmap(0, 0, position1, 128, 18, SSD1306_WHITE);
          display.display();
          startedThisFrameAt = millis();
          state = 4;
          break;
        case 4:
          now = millis();
          if ((now - startedThisFrameAt) >= delayBetweenFrames) {
            state = 5;
          }
          break;
        case 5: // start position1 and move to state 6
          display.clearDisplay();
          display.drawBitmap(0, 0, position2, 128, 18, SSD1306_WHITE);
          display.display();
          startedThisFrameAt = millis();
          state = 6;
          break;
        case 6:
          now = millis();
          if ((now - startedThisFrameAt) >= delayBetweenFrames) {
            state = 1;
          }
          break;
        case 7: // start position1 and move to state 8
          display.clearDisplay();
          display.drawBitmap(0, 0, position3, 128, 18, SSD1306_WHITE);
          display.display();
          startedThisFrameAt = millis();
          state = 8;
          break;
        case 8:
          now = millis();
          if ((now - startedThisFrameAt) >= delayBetweenFrames) {
            state = 9;
          }
          break;
        case 10: // start position1 and move to state 11
          display.clearDisplay();
          display.drawBitmap(0, 0, position4, 128, 18, SSD1306_WHITE);
          display.display();
          startedThisFrameAt = millis();
          state = 11;
          break;
        case 11:
          now = millis();
          if ((now - startedThisFrameAt) >= delayBetweenFrames) {
            state = 1; // start the animation over
          }
          break;
      }
    }
};

Animator myAnimator;

void setup()
{
  Serial.begin(9600);
  initOLED();
  initButton();
}

void loop()
{
  //If the button is pressed start the animation
  if (button.isPressed()) {
    //Serial.println(F("pressed"));
    myAnimator.init(100);
  } else {
    //    display.clearDisplay();
    //    display.display();
  }

  /* note that this will animate forever. Perhaps here I would animate while
    something else was taking place, e.g. a wiggle or a song playing. Or maybe
    it would be useful to have a timeout for the animator itself.
  */
  myAnimator.update();

}

/*
    Initialization functions, copied almost directly much from the examples
*/

void initButton() {

  Wire.begin(); //Join I2C bus
  //I would assume motor driver and mp3 trigger also do this; apparently there is no harm in multiple calls

  //check if button will acknowledge over I2C
  if (button.begin() == false) {
    Serial.println("Device did not acknowledge! Freezing.");
    while (1);
  }
  Serial.println("Button acknowledged.");
  Serial.println("Button ready");
  Serial.println();
}

void   initOLED() {
  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3D)) { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Don't proceed, loop forever
  }
  display.clearDisplay();
  display.display();
  Serial.println("OLED display ready");
  Serial.println();
}

